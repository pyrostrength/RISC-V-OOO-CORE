module mempreprocess #(parameter WIDTH = 31)
							 (input logic[WIDTH:0] source,address
							  input logic[2:0] funct3,
							  output logic[3:0] bytEnable,
							  output logic[WIDTH:0] data);
							  
							  always_comb begin
									data = source;
									bytEnable = 4'1111;
									case(funct3)
										3'b001: //No mis-aligned access on byte write or read.
											case(address[1:0]) // Determines the data address offset
												2'b00 : bytEnable = 4'b0001; // Access only the first byte. No need to shift source value
												end
												2'b01: begin //Shift source value that way it can be accessed using appropriate bytEnable signal
													bytEnable = 4'b0010;
													data = source << 8;
												end
												2'b10: begin
													bytEnable = 4'b0100;
													data = source << 16;
												end
												2'b11: begin
													bytEnable = 4'b1000;
													data = source << 24;
												end
											endcase
										3'b010:
											case(address[1:0])
												2'b00: bytEnable = 4'b0011;
												2'b10: begin
													bytEnable = 4'b1100;
													data = source << 16;
												end
												default: bytEnable = 4'b0011; // Should raise an exception.
											endcase
									endcase
							end

								